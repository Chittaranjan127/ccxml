<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ccxml PUBLIC "-//W3C//DTD CCXML 1.0//EN" "http://www.w3.org/TR/ccxml/ccxml.dtd">
<ccxml version="1.0" xmlns="http://www.w3.org/2002/09/ccxml">
<meta http-equiv="Pragma" content="no-cache"/>
<meta http-equiv="Expires" content="-1"/>

<!-- This is an OutboundCall ccxml sample page.  It shows the basic
ccxml framework for creating an outbound call as well as event processing
 -->
 <script>
      function objectToString(  obj ) { 
         var result = " [\n"; 
         result += extractprops( "", obj); 
         result += " ]";
         return result; 
      } 

      function extractprops ( parent, obj ) { 
         var prop, name, result = ""; 
         var count = 1; 
         if ( typeof ( obj ) == "object" ) { 
            for ( prop in obj ) { 
               name = parent + prop; 
               if ( typeof ( obj [ prop ] ) == "object" ) { 
                  result += extractprops( name+".", obj [ prop ] );
               } else { 
                  result +=   " " + name + ":" + obj [ prop ] + "\n"; 
               } 
               count = count + 1; 
            } 
         } else { 
            if (obj == undefined ) { 
               result +=  "___undefined"; 
            } else { 
               result +=  obj; 
            } 
         } 
         return result; 
      } 
   </script>
<var name="in_connectionid"/>  <!-- The connectionid of the incoming call. -->
<var name="out_connectionid"/> <!-- The connectionid of the outgoing call. -->
<var name="dialogid"/>         <!-- The id of the dialog we will run. -->

<!-- Initialize the state for this page -->
<var name="state" expr="'init'"/>

<!-- Fixed number for outgoing call (archit) -->
<var name="out_number" expr="'09675250099'"/>

<var name="audio_file_path" expr="'http://192.168.100.240:8080/CallMasking/data/'"/>

   
<!-- Possible states:
init  - The initialized state, accept the call.  
calling  - Placing an outbound call
-->

<!-- Event processor -->
  <eventprocessor statevariable="state">
  
   <!-- STATE: init -->

   <!--  New call is coming in, accept it blindly -->
    <transition event="connection.alerting" state="init" >
        <assign name="in_connectionid" expr="event$.connectionid"/>	
        		
		<dialogprepare 
   			type="'audio/x-wav'" 
        	connectionid = "in_connectionid"
			src="audio_file_path+'holdmusic.wav'" />
    </transition>
	
   <!-- Create a new call dialing a hardcoded # -->
    <transition event="connection.connected" state="init" >
        <assign name="state" expr="'calling'"/>        
        <!-- 
         enable call classification  the call classification 
         will arrive in a connection.signal event.
         -->
		<dialogstart prepareddialogid="dialogid" 
			connectionid="in_connectionid"/>
			
        <var name="hints" expr="new Object();"/>
        <assign name="hints.enable_call_classification"  expr= "true"/>
      <assign name="hints.call_classification_timeout" expr= "100000"/>
        
      <createcall dest="'tel:'+out_number" 
         connectionid="out_connectionid" 
         timeout="10000"
         callerid="session.connections[event$.connectionid].remote"
         hints="hints" />
    </transition> 
    
    <transition event="connection.connected" state="calling" >        
        <assign name="state" expr="'connected'"/>
		
        <join id1="in_connectionid" id2="out_connectionid" duplex="'full'"/>
    </transition>

     
    <transition event="connection.failed" state="calling" >
        <log expr="'****** INSIDE CONNECTION FAILED ********'"/>
        <log expr="'Failure Reason : '+event$.reason"/>
        <assign name="state" expr="'no_pick'"/>        
        <dialogprepare type="'audio/x-wav'" connectionid = "in_connectionid" src="audio_file_path+'noavailable.wav'" />

    </transition> 

   <transition event="connection.disconnected"  state="">
       <if cond="event$.connectionid == in_connectionid">
           <exit expr="'Caller Hungup'"/>
       <else/>
            <assign name="state" expr="'hangup_called'"/>        
            <dialogprepare type="'audio/x-wav'" connectionid = "in_connectionid" src="audio_file_path+'hangup.wav'" />
       </if>
   </transition>
   
   
   	<!-- INITIAL INFO ANC -->
	<transition event="dialog.prepared"  state="init">
	    <assign name="dialogid" expr="event$.dialogid"/>
		<accept connectionid="in_connectionid"/>
    </transition>
	
	
	<!-- NO PICK UP INFO ANC -->
	<transition event="dialog.prepared"  state="no_pick">
	    <assign name="dialogid" expr="event$.dialogid"/>
		<dialogstart prepareddialogid="dialogid" connectionid="in_connectionid"/>		
    </transition>

    <!-- CALLED HANG UP INFO ANC -->
    <transition event="dialog.prepared"  state="hangup_called">
        <assign name="dialogid" expr="event$.dialogid"/>
        <dialogstart prepareddialogid="dialogid" connectionid="in_connectionid"/>       
    </transition>

    <!-- NOT REACHABLE UP INFO ANC -->
    <transition event="dialog.prepared"  state="unreachable">
        <assign name="dialogid" expr="event$.dialogid"/>
        <dialogstart prepareddialogid="dialogid" connectionid="in_connectionid"/>       
    </transition>


   <transition event="dialog.started"  state="init">
    </transition>
	
	<!-- Finished playing the dialog, now exit   -->
    <transition event="dialog.exit"  state="init">
    </transition>
	
	<transition event="error.dialog.notprepared"  state="init">
		<reject connectionid="in_connectionid"/>
    </transition>

    <transition event="error.dialog.notstarted"  state="init">
		<disconnect connectionid="in_connectionid" reason="event$.reason" />
    </transition>
	

   <!-- STATE: ANYSTATE. Catch all, aids in debugging and to see the missed events -->
   <transition event="ccxml.exit" >

   </transition>

   <transition event="ccxml.kill" >

   </transition>

    <transition event="" >

    </transition>

  </eventprocessor>
</ccxml>
